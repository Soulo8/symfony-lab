name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests-and-linters:
    name: Tests and linters
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: Lint YAML files
        run: docker compose exec -T php ./bin/console lint:yaml config --parse-tags
      -
        name: Lint Twig templates
        run: docker compose exec -T php ./bin/console lint:twig templates --env=prod
      -
        name: Lint XLIFF translations
        run: docker compose exec -T php ./bin/console lint:xliff translations
      -
        name: Lint Parameters and Services
        run: docker compose exec -T php ./bin/console lint:container --no-debug
      -
        name: Lint Composer config
        run: docker compose exec -T php composer validate --strict
      -
        name: Run PHP-CS-Fixer
        run: docker compose exec -T php ./vendor/bin/php-cs-fixer fix --dry-run
      -
        name: Run PHPStan
        run: docker compose exec -T php ./vendor/bin/phpstan analyze
      -
        name: Run PHP Insights
        run: docker compose exec -T php ./vendor/bin/phpinsights
      -
        name: Install Importmap
        run: docker compose exec -T php bin/console importmap:install
      -
        name: Install dependencies JavaScript
        run: npm ci
      -
        name: Run linter JavaScript
        run: npm run lint
      -
        name: Tailwind CSS compilation
        run: docker compose exec -T php bin/console tailwind:build
      -
        name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost
      -
        name: Check HTTPS reachability
        run: curl -v --insecure --fail-with-body https://localhost
      -
        name: Check Mercure reachability
        run: curl -vI --insecure --fail-with-body https://localhost/.well-known/mercure?topic=test
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Run PHPUnit
        run: docker compose exec -T php bin/phpunit
      -
        name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0